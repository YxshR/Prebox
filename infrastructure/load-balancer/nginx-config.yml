# NGINX Load Balancer Configuration for Production
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: bulk-email-platform
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Logging format
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time"';

        access_log /var/log/nginx/access.log main;

        # Performance settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 10M;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

        # Upstream backend services
        upstream backend_api {
            least_conn;
            server backend-service-1:3000 max_fails=3 fail_timeout=30s;
            server backend-service-2:3000 max_fails=3 fail_timeout=30s;
            server backend-service-3:3000 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }

        upstream frontend_app {
            least_conn;
            server frontend-service-1:3000 max_fails=3 fail_timeout=30s;
            server frontend-service-2:3000 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }

        upstream admin_frontend {
            least_conn;
            server admin-frontend-service-1:3000 max_fails=3 fail_timeout=30s;
            server admin-frontend-service-2:3000 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }

        # SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Main application server
        server {
            listen 80;
            server_name app.bulkemail.com;
            return 301 https://$server_name$request_uri;
        }

        server {
            listen 443 ssl http2;
            server_name app.bulkemail.com;

            ssl_certificate /etc/ssl/certs/app.bulkemail.com.crt;
            ssl_certificate_key /etc/ssl/private/app.bulkemail.com.key;

            # Frontend application
            location / {
                proxy_pass http://frontend_app;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }

            # API endpoints
            location /api/ {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://backend_api;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 30s;
                proxy_send_timeout 60s;
                proxy_read_timeout 60s;
            }

            # Authentication endpoints with stricter rate limiting
            location /api/auth/ {
                limit_req zone=auth burst=10 nodelay;
                proxy_pass http://backend_api;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
        }

        # Admin panel server
        server {
            listen 80;
            server_name admin.bulkemail.com;
            return 301 https://$server_name$request_uri;
        }

        server {
            listen 443 ssl http2;
            server_name admin.bulkemail.com;

            ssl_certificate /etc/ssl/certs/admin.bulkemail.com.crt;
            ssl_certificate_key /etc/ssl/private/admin.bulkemail.com.key;

            # Admin frontend
            location / {
                proxy_pass http://admin_frontend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Admin API endpoints
            location /api/ {
                limit_req zone=api burst=50 nodelay;
                proxy_pass http://backend_api;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }

        # API-only server for external integrations
        server {
            listen 80;
            server_name api.bulkemail.com;
            return 301 https://$server_name$request_uri;
        }

        server {
            listen 443 ssl http2;
            server_name api.bulkemail.com;

            ssl_certificate /etc/ssl/certs/api.bulkemail.com.crt;
            ssl_certificate_key /etc/ssl/private/api.bulkemail.com.key;

            # API endpoints only
            location / {
                limit_req zone=api burst=100 nodelay;
                proxy_pass http://backend_api;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 30s;
                proxy_send_timeout 120s;
                proxy_read_timeout 120s;
            }

            # Health check
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
        }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-load-balancer
  namespace: bulk-email-platform
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx-load-balancer
  template:
    metadata:
      labels:
        app: nginx-load-balancer
    spec:
      containers:
      - name: nginx
        image: nginx:1.25-alpine
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: ssl-certs
          mountPath: /etc/ssl/certs
          readOnly: true
        - name: ssl-keys
          mountPath: /etc/ssl/private
          readOnly: true
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: ssl-certs
        secret:
          secretName: ssl-certificates
      - name: ssl-keys
        secret:
          secretName: ssl-private-keys

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-load-balancer-service
  namespace: bulk-email-platform
spec:
  selector:
    app: nginx-load-balancer
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: https
    port: 443
    targetPort: 443
  type: LoadBalancer